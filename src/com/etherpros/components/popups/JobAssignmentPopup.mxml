<?xml version="1.0" encoding="utf-8"?>
<s:TitleWindow xmlns:fx="http://ns.adobe.com/mxml/2009" 
			   xmlns:s="library://ns.adobe.com/flex/spark" 
			   xmlns:mx="library://ns.adobe.com/flex/mx" width="402" height="204"
			   xmlns:ns="http://mate.asfusion.com/"
			   title="Job Assignment"
			   >
	
	<fx:Script>
		<![CDATA[
			import com.asfusion.mate.events.Dispatcher;
			import com.etherpros.business.loaders.ProjectDAO;
			import com.etherpros.events.ClientEvent;
			import com.etherpros.events.ProjectEvent;
			import com.etherpros.events.RigEvent;
			import com.etherpros.model.data.Client;
			import com.etherpros.model.data.Job;
			import com.etherpros.model.data.Project;
			import com.etherpros.model.data.Rig;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.events.CloseEvent;
			import mx.managers.PopUpManager;
			
			[Bindable]
			private var _rigs:ArrayCollection;
			
			
			private var _jobModel:Job;
			private var _selectedRig:Rig;
			private var _isValid:Boolean = false;
			
			protected function jobAssignment(event:MouseEvent):void
			{
				lblMessage.text = "";
				this.selectedRig	= null;				
				if( this.cbxRigList.selectedIndex < 0 ){
					lblMessage.visible = true;
					lblMessage.text = "Rig is required";
					this.isValid = false;
					return;
				}else{
					this.selectedRig = this.cbxRigList.selectedItem as Rig;						
				}
				this.isValid = true; 
				this.close();
			}
			
			public function init():void{
				//var rigsEvent:RigEvent = new RigEvent(RigEvent.FIND_ALL);
				//this.mateDispatcher.dispatchEvent(rigsEvent);
			}	

			protected function closeMe(event:MouseEvent):void
			{ close(); }			
			protected function windowClose(event:CloseEvent):void
			{ close(); }
			
			private function close():void{
				this.lblMessage.text = "";
				this.lblMessage.visible = false;				
				this.cbxRigList.prompt = "--Select--";
				var closeEvent:CloseEvent = new CloseEvent(CloseEvent.CLOSE);
				dispatchEvent(closeEvent);
			}			
			
			public function get jobModel():Job
			{ return _jobModel; }
			public function set jobModel(value:Job):void
			{
				_jobModel = value;
				this.txtContractorName.text = this._jobModel.contractor.FullName;
			}

			public function get rigs():ArrayCollection
			{ return _rigs; }
			public function set rigs(value:ArrayCollection):void
			{ _rigs = value; }			

			public function get selectedRig():Rig
			{ return _selectedRig; }
			public function set selectedRig(value:Rig):void
			{ _selectedRig = value; }

			public function get isValid():Boolean
			{ return _isValid; }
			public function set isValid(value:Boolean):void
			{ _isValid = value; }
		]]>
	</fx:Script>	
	<fx:Declarations>
		<ns:Dispatcher id="mateDispatcher" />
	</fx:Declarations>
		<s:FormHeading label="Assignment of jobs to a contractor" x="10" />
	
		<s:TextInput id="txtContractorName" editable="false" x="10" y="58"/>			
		
		<s:ComboBox id="cbxRigList"
					dataProvider="{ _rigs }"
					prompt="--Select--"
					labelField="RigName"
					x="146" y="58">			
		</s:ComboBox>
		<s:Label id="lblMessage" visible="false" x="88" y="118" color="red" text=""/>

		<s:Button id="btnAssign" label="Assign" click="jobAssignment(event)" x="83" y="88"/>
		<s:Button id="btnCancel" label="Cancel" click="closeMe(event)" x="192" y="88"/>
	
</s:TitleWindow>
