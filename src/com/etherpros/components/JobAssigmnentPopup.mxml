<?xml version="1.0" encoding="utf-8"?>
<s:TitleWindow xmlns:fx="http://ns.adobe.com/mxml/2009" 
			   xmlns:s="library://ns.adobe.com/flex/spark" 
			   xmlns:mx="library://ns.adobe.com/flex/mx" width="400" height="300"
			   xmlns:ns="http://mate.asfusion.com/"
			   title="Job Assignment"
			   >
	
	<fx:Script>
		<![CDATA[
			import com.asfusion.mate.events.Dispatcher;
			import com.etherpros.business.ProjectDAO;
			import com.etherpros.events.ProjectEvent;
			import com.etherpros.model.Job;
			import com.etherpros.model.Project;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.events.CloseEvent;
			import mx.managers.PopUpManager;
			[Bindable]
			private var _projects:ArrayCollection;
			private var _jobModel:Job;
			private var _selectedProject:Project;
			
			protected function jobAssignment(event:MouseEvent):void
			{
				lblMessage.text = "";
				if ( this.cbxProjectList.selectedIndex < 0 ){
					lblMessage.visible = true;
					lblMessage.text = "Project is required";
				}else{
					_selectedProject = this.cbxProjectList.selectedItem as Project;
					this.close();
				}
			}
			
			public function init():void{				
				if ( _projects == null || _projects.length <= 0 ){
					var projectEvent:ProjectEvent = new ProjectEvent(ProjectEvent.FIND_ALL);
					this.mateDispatcher.dispatchEvent(projectEvent);
				}
			}			
			
			public function get projects():ArrayCollection
			{
				return _projects;
			}

			public function set projects(value:ArrayCollection):void
			{
				_projects = value;
			}

			public function get jobModel():Job
			{
				return _jobModel;
			}

			public function set jobModel(value:Job):void
			{
				_jobModel = value;
				this.txtContractorName.text = this._jobModel.contractor.FullName;
			}


			protected function closeMe(event:MouseEvent):void
			{
				close();
			}
			
			protected function windowClose(event:CloseEvent):void
			{
				close();			
			}
			
			private function close():void{
				//PopUpManager.removePopUp(this);
				var closeEvent:CloseEvent = new CloseEvent(CloseEvent.CLOSE);
				dispatchEvent(closeEvent);
			}

			public function get selectedProject():Project
			{
				return _selectedProject;
			}

			public function set selectedProject(value:Project):void
			{
				_selectedProject = value;
			}

			
		]]>
	</fx:Script>	
	<fx:Declarations>
		<ns:Dispatcher id="mateDispatcher" />
	</fx:Declarations>
		<s:FormHeading label="Assignment of jobs to a contractor" x="10" />
	
		<s:TextInput id="txtContractorName" editable="false" x="10" y="58"/>
		<s:ComboBox id="cbxProjectList"
					dataProvider="{ _projects }"
					prompt="--Select--"
					labelField="ProjName"
					 x="153" y="58">
			
			
		</s:ComboBox>
		<s:Label id="lblMessage" text="" color="red" visible="false"/>

		<s:Button id="btnAssign" label="Assign" click="jobAssignment(event)" x="10" y="112"/>
		<s:Button id="btnCancel" label="Cancel" click="closeMe(event)" x="95" y="112"/>
</s:TitleWindow>
