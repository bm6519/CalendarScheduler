<?xml version="1.0" encoding="utf-8"?>
<EventMap xmlns:fx="http://ns.adobe.com/mxml/2009"
		  xmlns:s="library://ns.adobe.com/flex/spark" 
		  xmlns="http://mate.asfusion.com/">
	
	<fx:Script>
		<![CDATA[
			import com.etherpros.business.*;
			import com.etherpros.business.loaders.*;
			import com.etherpros.components.CalendarForm;
			import com.etherpros.components.popups.JobAssignmentPopup;
			import com.etherpros.controllers.CalendarController;
			import com.etherpros.events.*;
			
			import mx.events.*;
			
		]]>
	</fx:Script>
	
	<fx:Declarations>	
		<Debugger level="{Debugger.ALL}" />
		<!-- Inject properties to any views as soon as possible listening to FlexEvent.PREINITIALIZE -->	
		<InjectorSettings eventType="{ FlexEvent.PREINITIALIZE }"/>
				
		<!-- Instantiate data loaders -->
		<EventHandlers type="{FlexEvent.PREINITIALIZE}"> 
			<ObjectBuilder generator="{ DataManager }" constructorArguments="{ scope.dispatcher }" />
			<ObjectBuilder generator="{ ClientDAO }" constructorArguments="{ scope.dispatcher }" />
			<ObjectBuilder generator="{ ProjectDAO }" constructorArguments="{ scope.dispatcher }" />
			<ObjectBuilder generator="{ RigDAO }" constructorArguments="{ scope.dispatcher }" />
			<ObjectBuilder generator="{ ContractorDAO }" constructorArguments="{ scope.dispatcher }" />		
			<ObjectBuilder generator="{ JobAssignmentDAO }" constructorArguments="{ scope.dispatcher }" />
			
			<ObjectBuilder generator="{ CalendarController }"  />
		</EventHandlers>
				

		<!-- Contractor loading.  -->
		<EventHandlers type="{ContractorEvent.FIND_ALL}">
			<MethodInvoker generator="{ ContractorDAO }" method="findAll"  />			
		</EventHandlers>		
		<EventHandlers type="{ContractorEvent.FIND_ALL_DONE}">
			<MethodInvoker generator="{DataManager}" method="loadContractors" arguments="{event.contractors}" /> 
		</EventHandlers>
		<EventHandlers type="{ContractorEvent.ADD_NEW}">
			<MethodInvoker generator="{ ContractorDAO }" method="addNewContractor"  arguments="{event.contractor}"/>			
		</EventHandlers>
				
		<!-- Project loading.  -->
		<EventHandlers type="{ProjectEvent.FIND_ALL}">
			<MethodInvoker generator="{ ProjectDAO }" method="findAll"  />			
		</EventHandlers>
		<EventHandlers type="{ProjectEvent.FIND_ALL_DONE}">
			<MethodInvoker generator="{DataManager}" method="loadProjects" arguments="{event.projects}" /> 
		</EventHandlers>			
		<EventHandlers type="{ProjectEvent.ADD_NEW}">
			<MethodInvoker generator="{ ProjectDAO }" method="addNewProject"   arguments="{event.project}" />			
		</EventHandlers>
		<!-- Rig loading. -->
		<EventHandlers type="{RigEvent.FIND_ALL}">
			<MethodInvoker generator="{ RigDAO }" method="findAll"  />			
		</EventHandlers>
		<EventHandlers type="{RigEvent.FIND_ALL_DONE}">
			<MethodInvoker generator="{DataManager}" method="loadRigs" arguments="{event.rigs}" /> 
		</EventHandlers>		
		
		<!-- Client loading. -->
		<EventHandlers type="{ClientEvent.FIND_ALL}">
			<MethodInvoker generator="{ ClientDAO }" method="findAll"  />			
		</EventHandlers>		
		<EventHandlers type="{ClientEvent.FIND_ALL_DONE}">
			<MethodInvoker generator="{DataManager}" method="loadClients" arguments="{event.clients}" /> 
		</EventHandlers>	
		<EventHandlers type="{ClientEvent.ADD_NEW}">
			<MethodInvoker generator="{ ClientDAO }" method="addNewClient"  arguments="{event.client}" />			
		</EventHandlers>
		<!-- Jobs loading. -->
		<EventHandlers type="{JobAssignmentEvent.FIND_ALL}">
			<MethodInvoker generator="{ JobAssignmentDAO }" method="findAll"  arguments="{[event.startDate, event.endDate]}" />
		</EventHandlers>
		<EventHandlers type="{JobAssignmentEvent.FIND_BY_PROJECT}">
			<MethodInvoker generator="{ JobAssignmentDAO }" method="finByProject"  arguments="{[event.project, event.startDate, event.endDate]}" />
		</EventHandlers>
		<EventHandlers type="{JobAssignmentEvent.FIND_ALL_DONE}">
			<MethodInvoker generator="{DataManager}" method="loadJobs" arguments="{event.jobs}" /> 
		</EventHandlers>			
		
		<EventHandlers type="{ JobAssignmentEvent.JOB_ASSIGNMENT_SAVE }">
			<MethodInvoker generator="{ JobAssignmentDAO }" method="createJobAssignment"  arguments="{[event.job]}" />			
		</EventHandlers>
		
		<EventHandlers type="{ JobAssignmentEvent.JOBS_LOADED }">
			<MethodInvoker generator="{ CalendarController }" method="jobsLoaded" />			
		</EventHandlers>		
		
		<!-- Object injectors  -->
		<Injectors target="{ CalendarController }">			
			<PropertyInjector targetKey="clients" source="{ DataManager }" 
							  sourceKey="clients" />
			
			<PropertyInjector targetKey="projects" source="{ DataManager }" 
							  sourceKey="projects" />
			
			<PropertyInjector targetKey="rigs" source="{ DataManager }"
							  sourceKey="rigs" />
			
			<PropertyInjector targetKey="contractors" source="{ DataManager }"
							  sourceKey="contractors" />
			
			<PropertyInjector targetKey="jobs" source="{ DataManager }"
							  sourceKey="jobs" />			
		</Injectors>
		
		<Injectors target="{ CalendarForm }">			
			<PropertyInjector targetKey="controller" source="{ CalendarController }" />			
		</Injectors>		
		
		<Injectors target="{ JobAssignmentPopup }">
			<PropertyInjector targetKey="rigs"
				source="{ DataManager }" 
				sourceKey="rigs"
				/>
		</Injectors>
		
	</fx:Declarations>
</EventMap>
